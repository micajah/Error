//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.225.
// 
#pragma warning disable 1591

namespace Micajah.ErrorTrackerHelper2.ErrorTracker {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.micajah.com/ErrorTracker/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddErrorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::Micajah.ErrorTrackerHelper2.Properties.Settings.Default.Micajah_ErrorTrackerHelper2_ErrorTracker_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddErrorCompletedEventHandler AddErrorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.micajah.com/ErrorTracker/AddErrorInfoError", RequestElementName="AddErrorInfoError", RequestNamespace="http://www.micajah.com/ErrorTracker/", ResponseElementName="AddErrorInfoErrorResponse", ResponseNamespace="http://www.micajah.com/ErrorTracker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AddErrorInfoErrorResult")]
        public int AddError(ErrorInfo oErrorInfo) {
            object[] results = this.Invoke("AddError", new object[] {
                        oErrorInfo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddErrorAsync(ErrorInfo oErrorInfo) {
            this.AddErrorAsync(oErrorInfo, null);
        }
        
        /// <remarks/>
        public void AddErrorAsync(ErrorInfo oErrorInfo, object userState) {
            if ((this.AddErrorOperationCompleted == null)) {
                this.AddErrorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddErrorOperationCompleted);
            }
            this.InvokeAsync("AddError", new object[] {
                        oErrorInfo}, this.AddErrorOperationCompleted, userState);
        }
        
        private void OnAddErrorOperationCompleted(object arg) {
            if ((this.AddErrorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddErrorCompleted(this, new AddErrorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.micajah.com/ErrorTracker/")]
    public partial class ErrorInfo {
        
        private int errorIDField;
        
        private int applicationIDField;
        
        private string browserField;
        
        private string methodField;
        
        private string nameField;
        
        private string descriptionField;
        
        private string uRLField;
        
        private string uRLReferrerField;
        
        private string physicalFileNameField;
        
        private string sourceFileField;
        
        private string errorFileField;
        
        private int errorLineNumberField;
        
        private string queryStringField;
        
        private string machineNameField;
        
        private string userIPAddressField;
        
        private string userHostNameField;
        
        private string exceptionTypeField;
        
        private string stackTraceField;
        
        private string exceptionsDescriptionField;
        
        private string queryStringDescriptionField;
        
        private string formField;
        
        private string sessionField;
        
        private string applicationDescriptionField;
        
        private string versionField;
        
        private string requestCookiesField;
        
        private string responseCookiesField;
        
        private string requestHeaderField;
        
        private string serverVariablesField;
        
        private decimal cacheSizeField;
        
        /// <remarks/>
        public int ErrorID {
            get {
                return this.errorIDField;
            }
            set {
                this.errorIDField = value;
            }
        }
        
        /// <remarks/>
        public int ApplicationID {
            get {
                return this.applicationIDField;
            }
            set {
                this.applicationIDField = value;
            }
        }
        
        /// <remarks/>
        public string Browser {
            get {
                return this.browserField;
            }
            set {
                this.browserField = value;
            }
        }
        
        /// <remarks/>
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
        
        /// <remarks/>
        public string URLReferrer {
            get {
                return this.uRLReferrerField;
            }
            set {
                this.uRLReferrerField = value;
            }
        }
        
        /// <remarks/>
        public string PhysicalFileName {
            get {
                return this.physicalFileNameField;
            }
            set {
                this.physicalFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string SourceFile {
            get {
                return this.sourceFileField;
            }
            set {
                this.sourceFileField = value;
            }
        }
        
        /// <remarks/>
        public string ErrorFile {
            get {
                return this.errorFileField;
            }
            set {
                this.errorFileField = value;
            }
        }
        
        /// <remarks/>
        public int ErrorLineNumber {
            get {
                return this.errorLineNumberField;
            }
            set {
                this.errorLineNumberField = value;
            }
        }
        
        /// <remarks/>
        public string QueryString {
            get {
                return this.queryStringField;
            }
            set {
                this.queryStringField = value;
            }
        }
        
        /// <remarks/>
        public string MachineName {
            get {
                return this.machineNameField;
            }
            set {
                this.machineNameField = value;
            }
        }
        
        /// <remarks/>
        public string UserIPAddress {
            get {
                return this.userIPAddressField;
            }
            set {
                this.userIPAddressField = value;
            }
        }
        
        /// <remarks/>
        public string UserHostName {
            get {
                return this.userHostNameField;
            }
            set {
                this.userHostNameField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionType {
            get {
                return this.exceptionTypeField;
            }
            set {
                this.exceptionTypeField = value;
            }
        }
        
        /// <remarks/>
        public string StackTrace {
            get {
                return this.stackTraceField;
            }
            set {
                this.stackTraceField = value;
            }
        }
        
        /// <remarks/>
        public string ExceptionsDescription {
            get {
                return this.exceptionsDescriptionField;
            }
            set {
                this.exceptionsDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string QueryStringDescription {
            get {
                return this.queryStringDescriptionField;
            }
            set {
                this.queryStringDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Form {
            get {
                return this.formField;
            }
            set {
                this.formField = value;
            }
        }
        
        /// <remarks/>
        public string Session {
            get {
                return this.sessionField;
            }
            set {
                this.sessionField = value;
            }
        }
        
        /// <remarks/>
        public string ApplicationDescription {
            get {
                return this.applicationDescriptionField;
            }
            set {
                this.applicationDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string RequestCookies {
            get {
                return this.requestCookiesField;
            }
            set {
                this.requestCookiesField = value;
            }
        }
        
        /// <remarks/>
        public string ResponseCookies {
            get {
                return this.responseCookiesField;
            }
            set {
                this.responseCookiesField = value;
            }
        }
        
        /// <remarks/>
        public string RequestHeader {
            get {
                return this.requestHeaderField;
            }
            set {
                this.requestHeaderField = value;
            }
        }
        
        /// <remarks/>
        public string ServerVariables {
            get {
                return this.serverVariablesField;
            }
            set {
                this.serverVariablesField = value;
            }
        }
        
        /// <remarks/>
        public decimal CacheSize {
            get {
                return this.cacheSizeField;
            }
            set {
                this.cacheSizeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddErrorCompletedEventHandler(object sender, AddErrorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddErrorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddErrorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591